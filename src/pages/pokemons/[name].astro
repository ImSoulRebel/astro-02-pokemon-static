---
import Title from "@components/shared/Title.astro";
import PokemonCard from "../../components/pokemons/PokemonCard.astro";
import type { PokemonListResponse } from "../../interfaces/pokemon-list.response";
import MainLayout from "../../layouts/MainLayout.astro";
import { Icon } from "astro-icon/components";

export const getStaticPaths = async () => {
  const resp = await fetch("https://pokeapi.co/api/v2/pokemon?limit=151");
  const { results } = (await resp.json()) as PokemonListResponse;

  return results.map(({ name, url }) => ({
    params: {
      name,
    },
    props: {
      url,
    },
  }));
};
/*  return [
    {
      params: { name: "bulbasaur" },
      props: { name: "bulbasaur", url: "http://pokeapi.co/api/v2/pokemon/1" },
    },
    {
      params: { name: "charmander" },
      props: { name: "charmander", url: "http://pokeapi.co/api/v2/pokemon/4" },
    },
  ];
}) satisfies GetStaticPaths; */

const { name } = Astro.params;
const { url } = Astro.props;
---

<MainLayout
  title={`Pokémon - ${name}`}
  description=`Información sobre el pokémon ${name}`
  image=""
>
  <section class="mt-10 mx-10 flex flex-col justify-center items-center">
    <div class="flex flex-row">
      <div>
        <button class="text-blue-500" onclick="history.back()">Regresar</button>
        <Title>{name}</Title>
      </div>
      <button id="btn-favorite" class="ml-4" data-name={name} data-url={url}>
        <Icon data-outlined name="heart-outline" size={50} />
        <Icon data-filled class="hidden" name="heart-fill" size={50} />
      </button>
    </div>
    <PokemonCard name={name} url={url} isDetail />
  </section>

  <script>
    import type { FavoritePokemon } from "@interfaces/favorite-pokemon";
    const handlePageLoad = () => {
      let favoritePokemons: FavoritePokemon[] = JSON.parse(
        localStorage.getItem("favoritePokemons") ?? "[]"
      );

      const btnFavorite = document.querySelector(
        "#btn-favorite"
      ) as HTMLButtonElement;

      if (!btnFavorite) return;

      const name = btnFavorite.dataset.name ?? "";
      const url = btnFavorite.dataset.url ?? "";
      const isFavorite = favoritePokemons.some((fav) => fav.name === name);

      const heartOutlined = document.querySelector(
        "[data-outlined"
      ) as HTMLElement;
      const heartfilled = document.querySelector(
        "[data-filled]"
      ) as HTMLElement;

      if (isFavorite) {
        heartOutlined.classList.add("hidden");
        heartfilled.classList.remove("hidden");
      }

      const toggleFavorite = () => {
        const isFavorite = favoritePokemons.some((fav) => fav.name === name);

        if (isFavorite) {
          // Remover
          favoritePokemons = favoritePokemons.filter(
            (fav) => fav.name !== name
          );
        } else {
          // Agregar
          favoritePokemons.push({
            name: name,
            url: url,
          });
        }

        localStorage.setItem(
          "favoritePokemons",
          JSON.stringify(favoritePokemons)
        );
      };

      btnFavorite.onclick = () => {
        heartOutlined.classList.toggle("hidden");
        heartfilled.classList.toggle("hidden");
        toggleFavorite();
      };
    };

    document.addEventListener("astro:page-load", handlePageLoad);
  </script>

  <style>
    a {
      @apply hover:underline text-blue-500;
    }
    #btn-favorite {
      @apply hover:animate-pulse;
    }
  </style>
</MainLayout>
